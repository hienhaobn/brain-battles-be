version: '3.8'

services:
  app:
    container_name: brain_battles_be
    depends_on:
      - mysqldb
    build: .
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $PORT:$PORT
    command: "./docker-entrypoint.sh"
    networks:
      - nest_server

  redis:
    image: 'redis:latest'
    container_name: brain-battles-redis
    ports:
      - 6380:6379
    networks:
      - nest_server

  mysqldb:
    image: mysql:8.0
    restart: unless-stopped
    env_file: ./.env
    ports:
      - $DATABASE_PORT:$DATABASE_PORT
    environment:
      MYSQL_ROOT_PASSWORD: $DATABASE_PASSWORD
      MYSQL_DATABASE: $DATABASE
    volumes:
      - db:/var/lib/mysql
    networks:
      - nest_server

volumes:
  db:
networks:
  nest_server:
    driver: bridge


# version: '3'
# services:
#   mysql:
#     image: mysql:8
#     container_name: brain_battles_be-mysql
#     command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --sql_mode="" --default-authentication-plugin=mysql_native_password
#     environment:
#       MYSQL_ROOT_PASSWORD: 'root'
#       MYSQL_DATABASE: brain_battles
#       MYSQL_USER: 'brain_battles'
#       MYSQL_PASSWORD: 'brain_battles'
#       LANG: C.UTF-8
#     volumes:
#       - ./.docker/mysql:/var/lib/mysql
#     ports:
#       - 3307:3306
#     networks:
#       - nest_server

#   redis:
#     image: 'redis:latest'
#     container_name: brain-battles-redis
#     ports:
#       - 6380:6379
#     networks:
#       - nest_server

#   zookeeper:
#     image: confluentinc/cp-zookeeper:latest
#     hostname: zookeeper
#     container_name: brain-battles-zookeeper
#     ports:
#       - "2181:2181"
#     environment:
#       ZOOKEEPER_CLIENT_PORT: 2181
#       ZOOKEEPER_SERVER_ID: 1
#       ZOOKEEPER_SERVERS: zookeeper:2888:3888
#     networks:
#       - nest_server

#   kafka:
#     image: confluentinc/cp-kafka:latest
#     container_name: brain-battles-kafka
#     hostname: kafka
#     ports:
#       - "9092:9092"
#       - "29092:29092"
#       - "9999:9999"
#     environment:
#       KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
#       KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
#       KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
#       KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
#       KAFKA_BROKER_ID: 1
#       KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
#       KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
#       KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
#       KAFKA_JMX_PORT: 9999
#       KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
#       KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
#       KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
#     depends_on:
#       - zookeeper
#     networks:
#       - nest_server

#   app:
#     image: brain_battles_be
#     container_name: brain_battles_be
#     build: .
#     restart: unless-stopped
#     env_file: ./.env
#     ports:
#       - 3000:3000
#     networks:
#       - nest_server

# volumes:
#   db:

# networks:
#   nest_server:
#     driver: bridge
